//MUHAMMAD TAHA HAQQANI, SECTION: 501
// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux4Way(in=load, sel=address[1..2], a=w0, b=w1, c=w2, d=w3);
	DMux(in=w0, sel=address[0], a=x0, b=x1);
	DMux(in=w1, sel=address[0], a=x2, b=x3);
	DMux(in=w2, sel=address[0], a=x4, b=x5);
	DMux(in=w3, sel=address[0], a=x6, b=x7);
	Register(in=in, load=x0 ,out=r0); 
	Register(in=in, load=x1 ,out=r1); 
	Register(in=in, load=x2 ,out=r2); 
	Register(in=in, load=x3 ,out=r3); 
	Register(in=in, load=x4 ,out=r4); 
	Register(in=in, load=x5 ,out=r5); 
	Register(in=in, load=x6 ,out=r6); 
	Register(in=in, load=x7 ,out=r7);
	Mux4Way16(a=r0, b=r1, c=r2 ,d=r3, sel=address[0..1], out=y1); 
	Mux4Way16(a=r4, b=r5, c=r6 ,d=r7, sel=address[0..1], out=y2);
	Mux16(a=y1, b=y2, sel=address[2], out=out);
}